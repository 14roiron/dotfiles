# _tmux.conf
#
# Tmux configuration of Champions
#
# By: Jeremy Mack
# Found: On the internet
# Cobbled: Together

# ------------------------
# Bindings
# ------------------------
# Unbind all keys
#unbind-key -a

# Set the terminal type so colors get rendered correctly
set -g default-terminal "screen-256color"

#set -g default-shell "/usr/local/bin/zsh"
#set -g default-command "zsh"
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"
set -g renumber-windows on

# Powerline settings
set -g status on
set -g status-interval 2
set -g status-justify "centre"
set -g status-left-length 100
set -g status-right-length 100
set -g status-left "#(~/.dotfiles/.tmux/tmux-powerline/powerline.sh left)"
set -g status-right "#(~/.dotfiles/.tmux/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]#[fg=colour255, bg=colour27] #I  #W #[fg=colour27, bg=colour235]"
#


# History setting
set -g history-limit 100000

# Make switching to cmd mode in zsh quick!
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# focus events enabled for terminals that support them
set -g focus-events on

# THEME
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'


# if run as "tmux attach", create a session if one does not already exist
new-session -n $HOST

##unbind C-b
#bind-key C-s send-prefix
set -g prefix C-a
#set-option -g prefix C-s
#set-option -g prefix M-a
set -g mouse on

# Reload tmux.conf on the fly
unbind r
bind r source-file ~/.tmux.conf

# Use VI Bindings in Copy Mode
set-window-option -g mode-keys vi

# Switch to specific pane
bind -n M-1 select-pane -t 0
bind -n M-2 select-pane -t 1
bind -n M-3 select-pane -t 2
bind -n M-4 select-pane -t 3


# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# -------------------------------------------------------
# Smart pane switching with awareness of vim splits
# from: https://github.com/christoomey/vim-tmux-navigator
# -------------------------------------------------------
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resize panes with arrow keys
#bind-key -nr M-M-Up resize-pane -U
#bind-key -nr M-M-Down resize-pane -D
#bind-key -nr M-M-Left resize-pane -L
#bind-key -nr M-M-Right resize-pane -R
bind-key -nr M-H resize-pane -L
bind-key -nr M-J resize-pane -D
bind-key -nr M-K resize-pane -U
bind-key -nr M-L resize-pane -R

# Zoom pane to full screen
# bind-key -nr M-z resize-pane -Z

# Horizontal and vertical pane splits
#bind -n M-\ split-window -h
#bind -n M-- split-window -v

# split panes using | and -
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

bind-key -r > swap-pane -D #:+
bind-key -r < swap-pane -U #:-


# Shift arrow to switch windows

bind -n S-M-Left previous-window
bind -n S-M-Right next-window

# Copy and Paste Mode
bind-key -n M-v copy-mode
bind-key -n M-i paste-buffer

#install vim shell
#bind M-V run "sh <curl https://raw.githubusercontent.com/14roiron/spf13-vim/3.0/bootstrap.sh -L);sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\""
# -------------
# Vim Copy Mode
# from: http://cl.ly/0e2U2v062D3d
# -------------
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy 'M-v' rectangle-toggle

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xclip"


# Equal Horizontal / Vertical Panes
bind -n M-= select-layout main-horizontal
bind -n M-+ select-layout even-vertical

# -----------------------------------------------------------------------------
# Nesting
# -----------------------------------------------------------------------------

bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set window-status-current-format "#[fg=black,bg=brightyellow,nobold,nounderscore,noitalics]#[fg=white,bg=brightyellow] #I #[fg=white,bg=brightyellow] #W #[fg=brightyellow,bg=black,nobold,nounderscore,noitalics]" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u window-status-current-format \;\
  refresh-client -S

# -----------------------------------------------------------------------------
# Key Bindings
# -----------------------------------------------------------------------------

# Load voltron session
bind V source-file ~/.dotfiles/tmux/voltron.session

# Swap the current window with the top window
bind T swap-window -t 1


# ---------------
# Change Sessions
# ---------------

# List
bind -n M-8 choose-session
# Previous
bind -n M-9 switch-client -p
# Next
bind -n M-0 switch-client -n

# No More Accidental Pane Killing
bind ^x confirm-before -p "kill-pane #P? (y/n)" kill-pane

#run-shell "powerline-daemon -q"
source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
# source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# Put this at the bottom of .tmux.conf:

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'

if "test ! -d ~/.tmux/plugins/tpm" \
	   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
set -g @colors-solarized 'dark'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
#set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'



# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
